// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// Pagination Contains useful links for paging through result sets
type Pagination struct {
	BeforeCursor *string `json:"before_cursor,omitempty"`
	AfterCursor *string `json:"after_cursor,omitempty"`
	PreviousLink *string `json:"previous_link,omitempty"`
	NextLink *string `json:"next_link,omitempty"`
}

// NewPagination instantiates a new Pagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagination() *Pagination {
	this := Pagination{}
	return &this
}

// NewPaginationWithDefaults instantiates a new Pagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationWithDefaults() *Pagination {
	this := Pagination{}
	return &this
}

// GetBeforeCursor returns the BeforeCursor field value if set, zero value otherwise.
func (o *Pagination) GetBeforeCursor() string {
	if o == nil || o.BeforeCursor == nil {
		var ret string
		return ret
	}
	return *o.BeforeCursor
}

// GetBeforeCursorOk returns a tuple with the BeforeCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetBeforeCursorOk() (*string, bool) {
	if o == nil || o.BeforeCursor == nil {
		return nil, false
	}
	return o.BeforeCursor, true
}

// HasBeforeCursor returns a boolean if a field has been set.
func (o *Pagination) HasBeforeCursor() bool {
	if o != nil && o.BeforeCursor != nil {
		return true
	}

	return false
}

// SetBeforeCursor gets a reference to the given string and assigns it to the BeforeCursor field.
func (o *Pagination) SetBeforeCursor(v string) {
	o.BeforeCursor = &v
}

// GetAfterCursor returns the AfterCursor field value if set, zero value otherwise.
func (o *Pagination) GetAfterCursor() string {
	if o == nil || o.AfterCursor == nil {
		var ret string
		return ret
	}
	return *o.AfterCursor
}

// GetAfterCursorOk returns a tuple with the AfterCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetAfterCursorOk() (*string, bool) {
	if o == nil || o.AfterCursor == nil {
		return nil, false
	}
	return o.AfterCursor, true
}

// HasAfterCursor returns a boolean if a field has been set.
func (o *Pagination) HasAfterCursor() bool {
	if o != nil && o.AfterCursor != nil {
		return true
	}

	return false
}

// SetAfterCursor gets a reference to the given string and assigns it to the AfterCursor field.
func (o *Pagination) SetAfterCursor(v string) {
	o.AfterCursor = &v
}

// GetPreviousLink returns the PreviousLink field value if set, zero value otherwise.
func (o *Pagination) GetPreviousLink() string {
	if o == nil || o.PreviousLink == nil {
		var ret string
		return ret
	}
	return *o.PreviousLink
}

// GetPreviousLinkOk returns a tuple with the PreviousLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetPreviousLinkOk() (*string, bool) {
	if o == nil || o.PreviousLink == nil {
		return nil, false
	}
	return o.PreviousLink, true
}

// HasPreviousLink returns a boolean if a field has been set.
func (o *Pagination) HasPreviousLink() bool {
	if o != nil && o.PreviousLink != nil {
		return true
	}

	return false
}

// SetPreviousLink gets a reference to the given string and assigns it to the PreviousLink field.
func (o *Pagination) SetPreviousLink(v string) {
	o.PreviousLink = &v
}

// GetNextLink returns the NextLink field value if set, zero value otherwise.
func (o *Pagination) GetNextLink() string {
	if o == nil || o.NextLink == nil {
		var ret string
		return ret
	}
	return *o.NextLink
}

// GetNextLinkOk returns a tuple with the NextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pagination) GetNextLinkOk() (*string, bool) {
	if o == nil || o.NextLink == nil {
		return nil, false
	}
	return o.NextLink, true
}

// HasNextLink returns a boolean if a field has been set.
func (o *Pagination) HasNextLink() bool {
	if o != nil && o.NextLink != nil {
		return true
	}

	return false
}

// SetNextLink gets a reference to the given string and assigns it to the NextLink field.
func (o *Pagination) SetNextLink(v string) {
	o.NextLink = &v
}

func (o Pagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BeforeCursor != nil {
		toSerialize["before_cursor"] = o.BeforeCursor
	}
	if o.AfterCursor != nil {
		toSerialize["after_cursor"] = o.AfterCursor
	}
	if o.PreviousLink != nil {
		toSerialize["previous_link"] = o.PreviousLink
	}
	if o.NextLink != nil {
		toSerialize["next_link"] = o.NextLink
	}
	return json.Marshal(toSerialize)
}

type NullablePagination struct {
	value *Pagination
	isSet bool
}

func (v NullablePagination) Get() *Pagination {
	return v.value
}

func (v *NullablePagination) Set(val *Pagination) {
	v.value = val
	v.isSet = true
}

func (v NullablePagination) IsSet() bool {
	return v.isSet
}

func (v *NullablePagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagination(val *Pagination) *NullablePagination {
	return &NullablePagination{value: val, isSet: true}
}

func (v NullablePagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
