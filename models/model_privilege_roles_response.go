// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// PrivilegeRolesResponse struct for PrivilegeRolesResponse
type PrivilegeRolesResponse struct {
	Total        *int32   `json:"total,omitempty"`
	Roles        *[]int32 `json:"roles,omitempty"`
	BeforeCursor *string  `json:"beforeCursor,omitempty"`
	PreviousLink *string  `json:"previousLink,omitempty"`
	AfterCursor  *string  `json:"afterCursor,omitempty"`
	NextLink     *string  `json:"nextLink,omitempty"`
}

// NewPrivilegeRolesResponse instantiates a new PrivilegeRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivilegeRolesResponse() *PrivilegeRolesResponse {
	this := PrivilegeRolesResponse{}
	return &this
}

// NewPrivilegeRolesResponseWithDefaults instantiates a new PrivilegeRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivilegeRolesResponseWithDefaults() *PrivilegeRolesResponse {
	this := PrivilegeRolesResponse{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *PrivilegeRolesResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetRoles() []int32 {
	if o == nil || o.Roles == nil {
		var ret []int32
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetRolesOk() (*[]int32, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []int32 and assigns it to the Roles field.
func (o *PrivilegeRolesResponse) SetRoles(v []int32) {
	o.Roles = &v
}

// GetBeforeCursor returns the BeforeCursor field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetBeforeCursor() string {
	if o == nil || o.BeforeCursor == nil {
		var ret string
		return ret
	}
	return *o.BeforeCursor
}

// GetBeforeCursorOk returns a tuple with the BeforeCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetBeforeCursorOk() (*string, bool) {
	if o == nil || o.BeforeCursor == nil {
		return nil, false
	}
	return o.BeforeCursor, true
}

// HasBeforeCursor returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasBeforeCursor() bool {
	if o != nil && o.BeforeCursor != nil {
		return true
	}

	return false
}

// SetBeforeCursor gets a reference to the given string and assigns it to the BeforeCursor field.
func (o *PrivilegeRolesResponse) SetBeforeCursor(v string) {
	o.BeforeCursor = &v
}

// GetPreviousLink returns the PreviousLink field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetPreviousLink() string {
	if o == nil || o.PreviousLink == nil {
		var ret string
		return ret
	}
	return *o.PreviousLink
}

// GetPreviousLinkOk returns a tuple with the PreviousLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetPreviousLinkOk() (*string, bool) {
	if o == nil || o.PreviousLink == nil {
		return nil, false
	}
	return o.PreviousLink, true
}

// HasPreviousLink returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasPreviousLink() bool {
	if o != nil && o.PreviousLink != nil {
		return true
	}

	return false
}

// SetPreviousLink gets a reference to the given string and assigns it to the PreviousLink field.
func (o *PrivilegeRolesResponse) SetPreviousLink(v string) {
	o.PreviousLink = &v
}

// GetAfterCursor returns the AfterCursor field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetAfterCursor() string {
	if o == nil || o.AfterCursor == nil {
		var ret string
		return ret
	}
	return *o.AfterCursor
}

// GetAfterCursorOk returns a tuple with the AfterCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetAfterCursorOk() (*string, bool) {
	if o == nil || o.AfterCursor == nil {
		return nil, false
	}
	return o.AfterCursor, true
}

// HasAfterCursor returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasAfterCursor() bool {
	if o != nil && o.AfterCursor != nil {
		return true
	}

	return false
}

// SetAfterCursor gets a reference to the given string and assigns it to the AfterCursor field.
func (o *PrivilegeRolesResponse) SetAfterCursor(v string) {
	o.AfterCursor = &v
}

// GetNextLink returns the NextLink field value if set, zero value otherwise.
func (o *PrivilegeRolesResponse) GetNextLink() string {
	if o == nil || o.NextLink == nil {
		var ret string
		return ret
	}
	return *o.NextLink
}

// GetNextLinkOk returns a tuple with the NextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivilegeRolesResponse) GetNextLinkOk() (*string, bool) {
	if o == nil || o.NextLink == nil {
		return nil, false
	}
	return o.NextLink, true
}

// HasNextLink returns a boolean if a field has been set.
func (o *PrivilegeRolesResponse) HasNextLink() bool {
	if o != nil && o.NextLink != nil {
		return true
	}

	return false
}

// SetNextLink gets a reference to the given string and assigns it to the NextLink field.
func (o *PrivilegeRolesResponse) SetNextLink(v string) {
	o.NextLink = &v
}

func (o PrivilegeRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.BeforeCursor != nil {
		toSerialize["beforeCursor"] = o.BeforeCursor
	}
	if o.PreviousLink != nil {
		toSerialize["previousLink"] = o.PreviousLink
	}
	if o.AfterCursor != nil {
		toSerialize["afterCursor"] = o.AfterCursor
	}
	if o.NextLink != nil {
		toSerialize["nextLink"] = o.NextLink
	}
	return json.Marshal(toSerialize)
}

type NullablePrivilegeRolesResponse struct {
	value *PrivilegeRolesResponse
	isSet bool
}

func (v NullablePrivilegeRolesResponse) Get() *PrivilegeRolesResponse {
	return v.value
}

func (v *NullablePrivilegeRolesResponse) Set(val *PrivilegeRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivilegeRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivilegeRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivilegeRolesResponse(val *PrivilegeRolesResponse) *NullablePrivilegeRolesResponse {
	return &NullablePrivilegeRolesResponse{value: val, isSet: true}
}

func (v NullablePrivilegeRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivilegeRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
