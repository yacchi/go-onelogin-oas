// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
	"github.com/yacchi/go-onelogin-oas/models"
)

// EnrolledMfaDevicesResponseData struct for EnrolledMfaDevicesResponseData
type EnrolledMfaDevicesResponseData struct {
	OtpDevices *[]MfaDevice `json:"otp_devices,omitempty"`
}

// NewEnrolledMfaDevicesResponseData instantiates a new EnrolledMfaDevicesResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrolledMfaDevicesResponseData() *EnrolledMfaDevicesResponseData {
	this := EnrolledMfaDevicesResponseData{}
	return &this
}

// NewEnrolledMfaDevicesResponseDataWithDefaults instantiates a new EnrolledMfaDevicesResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrolledMfaDevicesResponseDataWithDefaults() *EnrolledMfaDevicesResponseData {
	this := EnrolledMfaDevicesResponseData{}
	return &this
}

// GetOtpDevices returns the OtpDevices field value if set, zero value otherwise.
func (o *EnrolledMfaDevicesResponseData) GetOtpDevices() []MfaDevice {
	if o == nil || o.OtpDevices == nil {
		var ret []MfaDevice
		return ret
	}
	return *o.OtpDevices
}

// GetOtpDevicesOk returns a tuple with the OtpDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrolledMfaDevicesResponseData) GetOtpDevicesOk() (*[]MfaDevice, bool) {
	if o == nil || o.OtpDevices == nil {
		return nil, false
	}
	return o.OtpDevices, true
}

// HasOtpDevices returns a boolean if a field has been set.
func (o *EnrolledMfaDevicesResponseData) HasOtpDevices() bool {
	if o != nil && o.OtpDevices != nil {
		return true
	}

	return false
}

// SetOtpDevices gets a reference to the given []MfaDevice and assigns it to the OtpDevices field.
func (o *EnrolledMfaDevicesResponseData) SetOtpDevices(v []MfaDevice) {
	o.OtpDevices = &v
}

func (o EnrolledMfaDevicesResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OtpDevices != nil {
		toSerialize["otp_devices"] = o.OtpDevices
	}
	return json.Marshal(toSerialize)
}

type NullableEnrolledMfaDevicesResponseData struct {
	value *EnrolledMfaDevicesResponseData
	isSet bool
}

func (v NullableEnrolledMfaDevicesResponseData) Get() *EnrolledMfaDevicesResponseData {
	return v.value
}

func (v *NullableEnrolledMfaDevicesResponseData) Set(val *EnrolledMfaDevicesResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrolledMfaDevicesResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrolledMfaDevicesResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrolledMfaDevicesResponseData(val *EnrolledMfaDevicesResponseData) *NullableEnrolledMfaDevicesResponseData {
	return &NullableEnrolledMfaDevicesResponseData{value: val, isSet: true}
}

func (v NullableEnrolledMfaDevicesResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrolledMfaDevicesResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
