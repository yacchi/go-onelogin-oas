// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// UserMfaFactorsResponseData struct for UserMfaFactorsResponseData
type UserMfaFactorsResponseData struct {
	AuthFactors *[]UserMfaFactorsResponseDataAuthFactors `json:"auth_factors,omitempty"`
}

// NewUserMfaFactorsResponseData instantiates a new UserMfaFactorsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMfaFactorsResponseData() *UserMfaFactorsResponseData {
	this := UserMfaFactorsResponseData{}
	return &this
}

// NewUserMfaFactorsResponseDataWithDefaults instantiates a new UserMfaFactorsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMfaFactorsResponseDataWithDefaults() *UserMfaFactorsResponseData {
	this := UserMfaFactorsResponseData{}
	return &this
}

// GetAuthFactors returns the AuthFactors field value if set, zero value otherwise.
func (o *UserMfaFactorsResponseData) GetAuthFactors() []UserMfaFactorsResponseDataAuthFactors {
	if o == nil || o.AuthFactors == nil {
		var ret []UserMfaFactorsResponseDataAuthFactors
		return ret
	}
	return *o.AuthFactors
}

// GetAuthFactorsOk returns a tuple with the AuthFactors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMfaFactorsResponseData) GetAuthFactorsOk() (*[]UserMfaFactorsResponseDataAuthFactors, bool) {
	if o == nil || o.AuthFactors == nil {
		return nil, false
	}
	return o.AuthFactors, true
}

// HasAuthFactors returns a boolean if a field has been set.
func (o *UserMfaFactorsResponseData) HasAuthFactors() bool {
	if o != nil && o.AuthFactors != nil {
		return true
	}

	return false
}

// SetAuthFactors gets a reference to the given []UserMfaFactorsResponseDataAuthFactors and assigns it to the AuthFactors field.
func (o *UserMfaFactorsResponseData) SetAuthFactors(v []UserMfaFactorsResponseDataAuthFactors) {
	o.AuthFactors = &v
}

func (o UserMfaFactorsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthFactors != nil {
		toSerialize["auth_factors"] = o.AuthFactors
	}
	return json.Marshal(toSerialize)
}

type NullableUserMfaFactorsResponseData struct {
	value *UserMfaFactorsResponseData
	isSet bool
}

func (v NullableUserMfaFactorsResponseData) Get() *UserMfaFactorsResponseData {
	return v.value
}

func (v *NullableUserMfaFactorsResponseData) Set(val *UserMfaFactorsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMfaFactorsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMfaFactorsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMfaFactorsResponseData(val *UserMfaFactorsResponseData) *NullableUserMfaFactorsResponseData {
	return &NullableUserMfaFactorsResponseData{value: val, isSet: true}
}

func (v NullableUserMfaFactorsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMfaFactorsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
