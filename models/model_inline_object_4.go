// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// InlineObject4 struct for InlineObject4
type InlineObject4 struct {
	// The new password
	Password string `json:"password"`
	// The new password repeated
	PasswordConfirmation string `json:"password_confirmation"`
	// Defaults to false. This will validate the password against the users OneLogin password policy.
	ValidatePolicy *string `json:"validate_policy,omitempty"`
}

// NewInlineObject4 instantiates a new InlineObject4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject4(password string, passwordConfirmation string) *InlineObject4 {
	this := InlineObject4{}
	this.Password = password
	this.PasswordConfirmation = passwordConfirmation
	return &this
}

// NewInlineObject4WithDefaults instantiates a new InlineObject4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject4WithDefaults() *InlineObject4 {
	this := InlineObject4{}
	return &this
}

// GetPassword returns the Password field value
func (o *InlineObject4) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *InlineObject4) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *InlineObject4) SetPassword(v string) {
	o.Password = v
}

// GetPasswordConfirmation returns the PasswordConfirmation field value
func (o *InlineObject4) GetPasswordConfirmation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordConfirmation
}

// GetPasswordConfirmationOk returns a tuple with the PasswordConfirmation field value
// and a boolean to check if the value has been set.
func (o *InlineObject4) GetPasswordConfirmationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordConfirmation, true
}

// SetPasswordConfirmation sets field value
func (o *InlineObject4) SetPasswordConfirmation(v string) {
	o.PasswordConfirmation = v
}

// GetValidatePolicy returns the ValidatePolicy field value if set, zero value otherwise.
func (o *InlineObject4) GetValidatePolicy() string {
	if o == nil || o.ValidatePolicy == nil {
		var ret string
		return ret
	}
	return *o.ValidatePolicy
}

// GetValidatePolicyOk returns a tuple with the ValidatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject4) GetValidatePolicyOk() (*string, bool) {
	if o == nil || o.ValidatePolicy == nil {
		return nil, false
	}
	return o.ValidatePolicy, true
}

// HasValidatePolicy returns a boolean if a field has been set.
func (o *InlineObject4) HasValidatePolicy() bool {
	if o != nil && o.ValidatePolicy != nil {
		return true
	}

	return false
}

// SetValidatePolicy gets a reference to the given string and assigns it to the ValidatePolicy field.
func (o *InlineObject4) SetValidatePolicy(v string) {
	o.ValidatePolicy = &v
}

func (o InlineObject4) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["password_confirmation"] = o.PasswordConfirmation
	}
	if o.ValidatePolicy != nil {
		toSerialize["validate_policy"] = o.ValidatePolicy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject4 struct {
	value *InlineObject4
	isSet bool
}

func (v NullableInlineObject4) Get() *InlineObject4 {
	return v.value
}

func (v *NullableInlineObject4) Set(val *InlineObject4) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject4) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject4(val *InlineObject4) *NullableInlineObject4 {
	return &NullableInlineObject4{value: val, isSet: true}
}

func (v NullableInlineObject4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
