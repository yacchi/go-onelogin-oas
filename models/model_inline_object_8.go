// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// InlineObject8 struct for InlineObject8
type InlineObject8 struct {
	// Set to the username or email of the user that you want to log in.
	UsernameOrEmail string `json:"username_or_email"`
	// Set to the password of the user that you want to log in.
	Password string `json:"password"`
	// Set to the subdomain of the user that you want to log in.
	Subdomain string `json:"subdomain"`
	// App ID of the app for which you want to generate a SAML token. This is the app ID in OneLogin.
	AppId int32 `json:"app_id"`
	// If you are using this API in a scenario in which MFA is required and youâ€™ll need to be able to honor IP address whitelisting defined in MFA policies, provide this parameter and set its value to the whitelisted IP address that needs to be bypassed.
	IpAddress *string `json:"ip_address,omitempty"`
}

// NewInlineObject8 instantiates a new InlineObject8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject8(usernameOrEmail string, password string, subdomain string, appId int32) *InlineObject8 {
	this := InlineObject8{}
	this.UsernameOrEmail = usernameOrEmail
	this.Password = password
	this.Subdomain = subdomain
	this.AppId = appId
	return &this
}

// NewInlineObject8WithDefaults instantiates a new InlineObject8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject8WithDefaults() *InlineObject8 {
	this := InlineObject8{}
	return &this
}

// GetUsernameOrEmail returns the UsernameOrEmail field value
func (o *InlineObject8) GetUsernameOrEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UsernameOrEmail
}

// GetUsernameOrEmailOk returns a tuple with the UsernameOrEmail field value
// and a boolean to check if the value has been set.
func (o *InlineObject8) GetUsernameOrEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsernameOrEmail, true
}

// SetUsernameOrEmail sets field value
func (o *InlineObject8) SetUsernameOrEmail(v string) {
	o.UsernameOrEmail = v
}

// GetPassword returns the Password field value
func (o *InlineObject8) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *InlineObject8) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *InlineObject8) SetPassword(v string) {
	o.Password = v
}

// GetSubdomain returns the Subdomain field value
func (o *InlineObject8) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *InlineObject8) GetSubdomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *InlineObject8) SetSubdomain(v string) {
	o.Subdomain = v
}

// GetAppId returns the AppId field value
func (o *InlineObject8) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *InlineObject8) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *InlineObject8) SetAppId(v int32) {
	o.AppId = v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *InlineObject8) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject8) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *InlineObject8) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *InlineObject8) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o InlineObject8) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username_or_email"] = o.UsernameOrEmail
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["subdomain"] = o.Subdomain
	}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject8 struct {
	value *InlineObject8
	isSet bool
}

func (v NullableInlineObject8) Get() *InlineObject8 {
	return v.value
}

func (v *NullableInlineObject8) Set(val *InlineObject8) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject8) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject8(val *InlineObject8) *NullableInlineObject8 {
	return &NullableInlineObject8{value: val, isSet: true}
}

func (v NullableInlineObject8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
