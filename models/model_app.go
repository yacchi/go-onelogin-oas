// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
	"time"
)

// App struct for App
type App struct {
	Id                 *int32                    `json:"id,omitempty"`
	Name               *string                   `json:"name,omitempty"`
	Visible            *bool                     `json:"visible,omitempty"`
	Description        *string                   `json:"description,omitempty"`
	Notes              *string                   `json:"notes,omitempty"`
	IconUrl            *string                   `json:"icon_url,omitempty"`
	AuthMethod         *int32                    `json:"auth_method,omitempty"`
	PolicyId           *int32                    `json:"policy_id,omitempty"`
	AllowAssumedSignin *bool                     `json:"allow_assumed_signin,omitempty"`
	TabId              *int32                    `json:"tab_id,omitempty"`
	ConnectorId        *int32                    `json:"connector_id,omitempty"`
	CreatedAt          *time.Time                `json:"created_at,omitempty"`
	UpdatedAt          *time.Time                `json:"updated_at,omitempty"`
	Provisioning       *AppProvisioning          `json:"provisioning,omitempty"`
	Sso                *AppSso                   `json:"sso,omitempty"`
	Configuration      *AppConfiguration         `json:"configuration,omitempty"`
	Parameters         *map[string]AppParameters `json:"parameters,omitempty"`
}

// NewApp instantiates a new App object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApp() *App {
	this := App{}
	return &this
}

// NewAppWithDefaults instantiates a new App object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWithDefaults() *App {
	this := App{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *App) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *App) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *App) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *App) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *App) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *App) SetName(v string) {
	o.Name = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *App) GetVisible() bool {
	if o == nil || o.Visible == nil {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetVisibleOk() (*bool, bool) {
	if o == nil || o.Visible == nil {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *App) HasVisible() bool {
	if o != nil && o.Visible != nil {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *App) SetVisible(v bool) {
	o.Visible = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *App) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *App) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *App) SetDescription(v string) {
	o.Description = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *App) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *App) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *App) SetNotes(v string) {
	o.Notes = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *App) GetIconUrl() string {
	if o == nil || o.IconUrl == nil {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetIconUrlOk() (*string, bool) {
	if o == nil || o.IconUrl == nil {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *App) HasIconUrl() bool {
	if o != nil && o.IconUrl != nil {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *App) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *App) GetAuthMethod() int32 {
	if o == nil || o.AuthMethod == nil {
		var ret int32
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAuthMethodOk() (*int32, bool) {
	if o == nil || o.AuthMethod == nil {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *App) HasAuthMethod() bool {
	if o != nil && o.AuthMethod != nil {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given int32 and assigns it to the AuthMethod field.
func (o *App) SetAuthMethod(v int32) {
	o.AuthMethod = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *App) GetPolicyId() int32 {
	if o == nil || o.PolicyId == nil {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetPolicyIdOk() (*int32, bool) {
	if o == nil || o.PolicyId == nil {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *App) HasPolicyId() bool {
	if o != nil && o.PolicyId != nil {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *App) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetAllowAssumedSignin returns the AllowAssumedSignin field value if set, zero value otherwise.
func (o *App) GetAllowAssumedSignin() bool {
	if o == nil || o.AllowAssumedSignin == nil {
		var ret bool
		return ret
	}
	return *o.AllowAssumedSignin
}

// GetAllowAssumedSigninOk returns a tuple with the AllowAssumedSignin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAllowAssumedSigninOk() (*bool, bool) {
	if o == nil || o.AllowAssumedSignin == nil {
		return nil, false
	}
	return o.AllowAssumedSignin, true
}

// HasAllowAssumedSignin returns a boolean if a field has been set.
func (o *App) HasAllowAssumedSignin() bool {
	if o != nil && o.AllowAssumedSignin != nil {
		return true
	}

	return false
}

// SetAllowAssumedSignin gets a reference to the given bool and assigns it to the AllowAssumedSignin field.
func (o *App) SetAllowAssumedSignin(v bool) {
	o.AllowAssumedSignin = &v
}

// GetTabId returns the TabId field value if set, zero value otherwise.
func (o *App) GetTabId() int32 {
	if o == nil || o.TabId == nil {
		var ret int32
		return ret
	}
	return *o.TabId
}

// GetTabIdOk returns a tuple with the TabId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetTabIdOk() (*int32, bool) {
	if o == nil || o.TabId == nil {
		return nil, false
	}
	return o.TabId, true
}

// HasTabId returns a boolean if a field has been set.
func (o *App) HasTabId() bool {
	if o != nil && o.TabId != nil {
		return true
	}

	return false
}

// SetTabId gets a reference to the given int32 and assigns it to the TabId field.
func (o *App) SetTabId(v int32) {
	o.TabId = &v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *App) GetConnectorId() int32 {
	if o == nil || o.ConnectorId == nil {
		var ret int32
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetConnectorIdOk() (*int32, bool) {
	if o == nil || o.ConnectorId == nil {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *App) HasConnectorId() bool {
	if o != nil && o.ConnectorId != nil {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given int32 and assigns it to the ConnectorId field.
func (o *App) SetConnectorId(v int32) {
	o.ConnectorId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *App) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *App) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *App) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *App) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *App) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *App) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *App) GetProvisioning() AppProvisioning {
	if o == nil || o.Provisioning == nil {
		var ret AppProvisioning
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetProvisioningOk() (*AppProvisioning, bool) {
	if o == nil || o.Provisioning == nil {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *App) HasProvisioning() bool {
	if o != nil && o.Provisioning != nil {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given AppProvisioning and assigns it to the Provisioning field.
func (o *App) SetProvisioning(v AppProvisioning) {
	o.Provisioning = &v
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *App) GetSso() AppSso {
	if o == nil || o.Sso == nil {
		var ret AppSso
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetSsoOk() (*AppSso, bool) {
	if o == nil || o.Sso == nil {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *App) HasSso() bool {
	if o != nil && o.Sso != nil {
		return true
	}

	return false
}

// SetSso gets a reference to the given AppSso and assigns it to the Sso field.
func (o *App) SetSso(v AppSso) {
	o.Sso = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *App) GetConfiguration() AppConfiguration {
	if o == nil || o.Configuration == nil {
		var ret AppConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetConfigurationOk() (*AppConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *App) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given AppConfiguration and assigns it to the Configuration field.
func (o *App) SetConfiguration(v AppConfiguration) {
	o.Configuration = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *App) GetParameters() map[string]AppParameters {
	if o == nil || o.Parameters == nil {
		var ret map[string]AppParameters
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetParametersOk() (*map[string]AppParameters, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *App) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]AppParameters and assigns it to the Parameters field.
func (o *App) SetParameters(v map[string]AppParameters) {
	o.Parameters = &v
}

func (o App) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Visible != nil {
		toSerialize["visible"] = o.Visible
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.IconUrl != nil {
		toSerialize["icon_url"] = o.IconUrl
	}
	if o.AuthMethod != nil {
		toSerialize["auth_method"] = o.AuthMethod
	}
	if o.PolicyId != nil {
		toSerialize["policy_id"] = o.PolicyId
	}
	if o.AllowAssumedSignin != nil {
		toSerialize["allow_assumed_signin"] = o.AllowAssumedSignin
	}
	if o.TabId != nil {
		toSerialize["tab_id"] = o.TabId
	}
	if o.ConnectorId != nil {
		toSerialize["connector_id"] = o.ConnectorId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Provisioning != nil {
		toSerialize["provisioning"] = o.Provisioning
	}
	if o.Sso != nil {
		toSerialize["sso"] = o.Sso
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableApp struct {
	value *App
	isSet bool
}

func (v NullableApp) Get() *App {
	return v.value
}

func (v *NullableApp) Set(val *App) {
	v.value = val
	v.isSet = true
}

func (v NullableApp) IsSet() bool {
	return v.isSet
}

func (v *NullableApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApp(val *App) *NullableApp {
	return &NullableApp{value: val, isSet: true}
}

func (v NullableApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
