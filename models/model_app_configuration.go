// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// AppConfiguration struct for AppConfiguration
type AppConfiguration struct {
	RedirectUri                   *string `json:"redirect_uri,omitempty"`
	RefreshTokenExpirationMinutes *int32  `json:"refresh_token_expiration_minutes,omitempty"`
	LoginUrl                      *string `json:"login_url,omitempty"`
	OidcApplicationType           *int32  `json:"oidc_application_type,omitempty"`
	TokenEndpointAuthMethod       *int32  `json:"token_endpoint_auth_method,omitempty"`
	AccessTokenExpirationMinutes  *int32  `json:"access_token_expiration_minutes,omitempty"`
	ProviderArn                   *string `json:"provider_arn,omitempty"`
	SignatureAlgorithm            *string `json:"signature_algorithm,omitempty"`
}

// NewAppConfiguration instantiates a new AppConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfiguration() *AppConfiguration {
	this := AppConfiguration{}
	return &this
}

// NewAppConfigurationWithDefaults instantiates a new AppConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigurationWithDefaults() *AppConfiguration {
	this := AppConfiguration{}
	return &this
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *AppConfiguration) GetRedirectUri() string {
	if o == nil || o.RedirectUri == nil {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetRedirectUriOk() (*string, bool) {
	if o == nil || o.RedirectUri == nil {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *AppConfiguration) HasRedirectUri() bool {
	if o != nil && o.RedirectUri != nil {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *AppConfiguration) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetRefreshTokenExpirationMinutes returns the RefreshTokenExpirationMinutes field value if set, zero value otherwise.
func (o *AppConfiguration) GetRefreshTokenExpirationMinutes() int32 {
	if o == nil || o.RefreshTokenExpirationMinutes == nil {
		var ret int32
		return ret
	}
	return *o.RefreshTokenExpirationMinutes
}

// GetRefreshTokenExpirationMinutesOk returns a tuple with the RefreshTokenExpirationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetRefreshTokenExpirationMinutesOk() (*int32, bool) {
	if o == nil || o.RefreshTokenExpirationMinutes == nil {
		return nil, false
	}
	return o.RefreshTokenExpirationMinutes, true
}

// HasRefreshTokenExpirationMinutes returns a boolean if a field has been set.
func (o *AppConfiguration) HasRefreshTokenExpirationMinutes() bool {
	if o != nil && o.RefreshTokenExpirationMinutes != nil {
		return true
	}

	return false
}

// SetRefreshTokenExpirationMinutes gets a reference to the given int32 and assigns it to the RefreshTokenExpirationMinutes field.
func (o *AppConfiguration) SetRefreshTokenExpirationMinutes(v int32) {
	o.RefreshTokenExpirationMinutes = &v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *AppConfiguration) GetLoginUrl() string {
	if o == nil || o.LoginUrl == nil {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetLoginUrlOk() (*string, bool) {
	if o == nil || o.LoginUrl == nil {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *AppConfiguration) HasLoginUrl() bool {
	if o != nil && o.LoginUrl != nil {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *AppConfiguration) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetOidcApplicationType returns the OidcApplicationType field value if set, zero value otherwise.
func (o *AppConfiguration) GetOidcApplicationType() int32 {
	if o == nil || o.OidcApplicationType == nil {
		var ret int32
		return ret
	}
	return *o.OidcApplicationType
}

// GetOidcApplicationTypeOk returns a tuple with the OidcApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetOidcApplicationTypeOk() (*int32, bool) {
	if o == nil || o.OidcApplicationType == nil {
		return nil, false
	}
	return o.OidcApplicationType, true
}

// HasOidcApplicationType returns a boolean if a field has been set.
func (o *AppConfiguration) HasOidcApplicationType() bool {
	if o != nil && o.OidcApplicationType != nil {
		return true
	}

	return false
}

// SetOidcApplicationType gets a reference to the given int32 and assigns it to the OidcApplicationType field.
func (o *AppConfiguration) SetOidcApplicationType(v int32) {
	o.OidcApplicationType = &v
}

// GetTokenEndpointAuthMethod returns the TokenEndpointAuthMethod field value if set, zero value otherwise.
func (o *AppConfiguration) GetTokenEndpointAuthMethod() int32 {
	if o == nil || o.TokenEndpointAuthMethod == nil {
		var ret int32
		return ret
	}
	return *o.TokenEndpointAuthMethod
}

// GetTokenEndpointAuthMethodOk returns a tuple with the TokenEndpointAuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetTokenEndpointAuthMethodOk() (*int32, bool) {
	if o == nil || o.TokenEndpointAuthMethod == nil {
		return nil, false
	}
	return o.TokenEndpointAuthMethod, true
}

// HasTokenEndpointAuthMethod returns a boolean if a field has been set.
func (o *AppConfiguration) HasTokenEndpointAuthMethod() bool {
	if o != nil && o.TokenEndpointAuthMethod != nil {
		return true
	}

	return false
}

// SetTokenEndpointAuthMethod gets a reference to the given int32 and assigns it to the TokenEndpointAuthMethod field.
func (o *AppConfiguration) SetTokenEndpointAuthMethod(v int32) {
	o.TokenEndpointAuthMethod = &v
}

// GetAccessTokenExpirationMinutes returns the AccessTokenExpirationMinutes field value if set, zero value otherwise.
func (o *AppConfiguration) GetAccessTokenExpirationMinutes() int32 {
	if o == nil || o.AccessTokenExpirationMinutes == nil {
		var ret int32
		return ret
	}
	return *o.AccessTokenExpirationMinutes
}

// GetAccessTokenExpirationMinutesOk returns a tuple with the AccessTokenExpirationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetAccessTokenExpirationMinutesOk() (*int32, bool) {
	if o == nil || o.AccessTokenExpirationMinutes == nil {
		return nil, false
	}
	return o.AccessTokenExpirationMinutes, true
}

// HasAccessTokenExpirationMinutes returns a boolean if a field has been set.
func (o *AppConfiguration) HasAccessTokenExpirationMinutes() bool {
	if o != nil && o.AccessTokenExpirationMinutes != nil {
		return true
	}

	return false
}

// SetAccessTokenExpirationMinutes gets a reference to the given int32 and assigns it to the AccessTokenExpirationMinutes field.
func (o *AppConfiguration) SetAccessTokenExpirationMinutes(v int32) {
	o.AccessTokenExpirationMinutes = &v
}

// GetProviderArn returns the ProviderArn field value if set, zero value otherwise.
func (o *AppConfiguration) GetProviderArn() string {
	if o == nil || o.ProviderArn == nil {
		var ret string
		return ret
	}
	return *o.ProviderArn
}

// GetProviderArnOk returns a tuple with the ProviderArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetProviderArnOk() (*string, bool) {
	if o == nil || o.ProviderArn == nil {
		return nil, false
	}
	return o.ProviderArn, true
}

// HasProviderArn returns a boolean if a field has been set.
func (o *AppConfiguration) HasProviderArn() bool {
	if o != nil && o.ProviderArn != nil {
		return true
	}

	return false
}

// SetProviderArn gets a reference to the given string and assigns it to the ProviderArn field.
func (o *AppConfiguration) SetProviderArn(v string) {
	o.ProviderArn = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *AppConfiguration) GetSignatureAlgorithm() string {
	if o == nil || o.SignatureAlgorithm == nil {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || o.SignatureAlgorithm == nil {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *AppConfiguration) HasSignatureAlgorithm() bool {
	if o != nil && o.SignatureAlgorithm != nil {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *AppConfiguration) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

func (o AppConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RedirectUri != nil {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if o.RefreshTokenExpirationMinutes != nil {
		toSerialize["refresh_token_expiration_minutes"] = o.RefreshTokenExpirationMinutes
	}
	if o.LoginUrl != nil {
		toSerialize["login_url"] = o.LoginUrl
	}
	if o.OidcApplicationType != nil {
		toSerialize["oidc_application_type"] = o.OidcApplicationType
	}
	if o.TokenEndpointAuthMethod != nil {
		toSerialize["token_endpoint_auth_method"] = o.TokenEndpointAuthMethod
	}
	if o.AccessTokenExpirationMinutes != nil {
		toSerialize["access_token_expiration_minutes"] = o.AccessTokenExpirationMinutes
	}
	if o.ProviderArn != nil {
		toSerialize["provider_arn"] = o.ProviderArn
	}
	if o.SignatureAlgorithm != nil {
		toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableAppConfiguration struct {
	value *AppConfiguration
	isSet bool
}

func (v NullableAppConfiguration) Get() *AppConfiguration {
	return v.value
}

func (v *NullableAppConfiguration) Set(val *AppConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfiguration(val *AppConfiguration) *NullableAppConfiguration {
	return &NullableAppConfiguration{value: val, isSet: true}
}

func (v NullableAppConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
