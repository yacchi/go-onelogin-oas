// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
	"github.com/yacchi/go-onelogin-oas/models"
	"time"
)

// Event struct for Event
type Event struct {
	AccountId int32 `json:"account_id"`
	EventTypeId int32 `json:"event_type_id"`
	// The Event ID
	Id *int32 `json:"id,omitempty"`
	// The date/time the Event was created
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UserId *int32 `json:"user_id,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Ipaddr *string `json:"ipaddr,omitempty"`
	ActorUserId *int32 `json:"actor_user_id,omitempty"`
	AssumingActingUserId *int32 `json:"assuming_acting_user_id,omitempty"`
	RoleId *int32 `json:"role_id,omitempty"`
	AppId *int32 `json:"app_id,omitempty"`
	GroupId *int32 `json:"group_id,omitempty"`
	OtpDeviceId *int32 `json:"otp_device_id,omitempty"`
	PolicyId *int32 `json:"policy_id,omitempty"`
	ActorSystem *string `json:"actor_system,omitempty"`
	CustomMessage *string `json:"custom_message,omitempty"`
	RoleName *string `json:"role_name,omitempty"`
	AppName *string `json:"app_name,omitempty"`
	GroupName *string `json:"group_name,omitempty"`
	ActorUserName *string `json:"actor_user_name,omitempty"`
	UserName *string `json:"user_name,omitempty"`
	PolicyName *string `json:"policy_name,omitempty"`
	OtpDeviceName *string `json:"otp_device_name,omitempty"`
	OperationName *string `json:"operation_name,omitempty"`
	DirectorySyncRunId *int32 `json:"directory_sync_run_id,omitempty"`
	DirectoryId *int32 `json:"directory_id,omitempty"`
	Resolution *string `json:"resolution,omitempty"`
	ClientId *string `json:"client_id,omitempty"`
	ResourcseTypeId *int32 `json:"resourcse_type_id,omitempty"`
	ErrorDescription *string `json:"error_description,omitempty"`
}

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent(accountId int32, eventTypeId int32, ) *Event {
	this := Event{}
	this.AccountId = accountId
	this.EventTypeId = eventTypeId
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *Event) GetAccountId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *Event) GetAccountIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *Event) SetAccountId(v int32) {
	o.AccountId = v
}

// GetEventTypeId returns the EventTypeId field value
func (o *Event) GetEventTypeId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value
// and a boolean to check if the value has been set.
func (o *Event) GetEventTypeIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EventTypeId, true
}

// SetEventTypeId sets field value
func (o *Event) SetEventTypeId(v int32) {
	o.EventTypeId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Event) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Event) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Event) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Event) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Event) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Event) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Event) GetUserId() int32 {
	if o == nil || o.UserId == nil {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetUserIdOk() (*int32, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Event) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *Event) SetUserId(v int32) {
	o.UserId = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Event) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Event) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Event) SetNotes(v string) {
	o.Notes = &v
}

// GetIpaddr returns the Ipaddr field value if set, zero value otherwise.
func (o *Event) GetIpaddr() string {
	if o == nil || o.Ipaddr == nil {
		var ret string
		return ret
	}
	return *o.Ipaddr
}

// GetIpaddrOk returns a tuple with the Ipaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetIpaddrOk() (*string, bool) {
	if o == nil || o.Ipaddr == nil {
		return nil, false
	}
	return o.Ipaddr, true
}

// HasIpaddr returns a boolean if a field has been set.
func (o *Event) HasIpaddr() bool {
	if o != nil && o.Ipaddr != nil {
		return true
	}

	return false
}

// SetIpaddr gets a reference to the given string and assigns it to the Ipaddr field.
func (o *Event) SetIpaddr(v string) {
	o.Ipaddr = &v
}

// GetActorUserId returns the ActorUserId field value if set, zero value otherwise.
func (o *Event) GetActorUserId() int32 {
	if o == nil || o.ActorUserId == nil {
		var ret int32
		return ret
	}
	return *o.ActorUserId
}

// GetActorUserIdOk returns a tuple with the ActorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorUserIdOk() (*int32, bool) {
	if o == nil || o.ActorUserId == nil {
		return nil, false
	}
	return o.ActorUserId, true
}

// HasActorUserId returns a boolean if a field has been set.
func (o *Event) HasActorUserId() bool {
	if o != nil && o.ActorUserId != nil {
		return true
	}

	return false
}

// SetActorUserId gets a reference to the given int32 and assigns it to the ActorUserId field.
func (o *Event) SetActorUserId(v int32) {
	o.ActorUserId = &v
}

// GetAssumingActingUserId returns the AssumingActingUserId field value if set, zero value otherwise.
func (o *Event) GetAssumingActingUserId() int32 {
	if o == nil || o.AssumingActingUserId == nil {
		var ret int32
		return ret
	}
	return *o.AssumingActingUserId
}

// GetAssumingActingUserIdOk returns a tuple with the AssumingActingUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAssumingActingUserIdOk() (*int32, bool) {
	if o == nil || o.AssumingActingUserId == nil {
		return nil, false
	}
	return o.AssumingActingUserId, true
}

// HasAssumingActingUserId returns a boolean if a field has been set.
func (o *Event) HasAssumingActingUserId() bool {
	if o != nil && o.AssumingActingUserId != nil {
		return true
	}

	return false
}

// SetAssumingActingUserId gets a reference to the given int32 and assigns it to the AssumingActingUserId field.
func (o *Event) SetAssumingActingUserId(v int32) {
	o.AssumingActingUserId = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *Event) GetRoleId() int32 {
	if o == nil || o.RoleId == nil {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRoleIdOk() (*int32, bool) {
	if o == nil || o.RoleId == nil {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *Event) HasRoleId() bool {
	if o != nil && o.RoleId != nil {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *Event) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Event) GetAppId() int32 {
	if o == nil || o.AppId == nil {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAppIdOk() (*int32, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Event) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *Event) SetAppId(v int32) {
	o.AppId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *Event) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *Event) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *Event) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetOtpDeviceId returns the OtpDeviceId field value if set, zero value otherwise.
func (o *Event) GetOtpDeviceId() int32 {
	if o == nil || o.OtpDeviceId == nil {
		var ret int32
		return ret
	}
	return *o.OtpDeviceId
}

// GetOtpDeviceIdOk returns a tuple with the OtpDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetOtpDeviceIdOk() (*int32, bool) {
	if o == nil || o.OtpDeviceId == nil {
		return nil, false
	}
	return o.OtpDeviceId, true
}

// HasOtpDeviceId returns a boolean if a field has been set.
func (o *Event) HasOtpDeviceId() bool {
	if o != nil && o.OtpDeviceId != nil {
		return true
	}

	return false
}

// SetOtpDeviceId gets a reference to the given int32 and assigns it to the OtpDeviceId field.
func (o *Event) SetOtpDeviceId(v int32) {
	o.OtpDeviceId = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *Event) GetPolicyId() int32 {
	if o == nil || o.PolicyId == nil {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPolicyIdOk() (*int32, bool) {
	if o == nil || o.PolicyId == nil {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *Event) HasPolicyId() bool {
	if o != nil && o.PolicyId != nil {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *Event) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetActorSystem returns the ActorSystem field value if set, zero value otherwise.
func (o *Event) GetActorSystem() string {
	if o == nil || o.ActorSystem == nil {
		var ret string
		return ret
	}
	return *o.ActorSystem
}

// GetActorSystemOk returns a tuple with the ActorSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorSystemOk() (*string, bool) {
	if o == nil || o.ActorSystem == nil {
		return nil, false
	}
	return o.ActorSystem, true
}

// HasActorSystem returns a boolean if a field has been set.
func (o *Event) HasActorSystem() bool {
	if o != nil && o.ActorSystem != nil {
		return true
	}

	return false
}

// SetActorSystem gets a reference to the given string and assigns it to the ActorSystem field.
func (o *Event) SetActorSystem(v string) {
	o.ActorSystem = &v
}

// GetCustomMessage returns the CustomMessage field value if set, zero value otherwise.
func (o *Event) GetCustomMessage() string {
	if o == nil || o.CustomMessage == nil {
		var ret string
		return ret
	}
	return *o.CustomMessage
}

// GetCustomMessageOk returns a tuple with the CustomMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetCustomMessageOk() (*string, bool) {
	if o == nil || o.CustomMessage == nil {
		return nil, false
	}
	return o.CustomMessage, true
}

// HasCustomMessage returns a boolean if a field has been set.
func (o *Event) HasCustomMessage() bool {
	if o != nil && o.CustomMessage != nil {
		return true
	}

	return false
}

// SetCustomMessage gets a reference to the given string and assigns it to the CustomMessage field.
func (o *Event) SetCustomMessage(v string) {
	o.CustomMessage = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *Event) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *Event) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *Event) SetRoleName(v string) {
	o.RoleName = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *Event) GetAppName() string {
	if o == nil || o.AppName == nil {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAppNameOk() (*string, bool) {
	if o == nil || o.AppName == nil {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *Event) HasAppName() bool {
	if o != nil && o.AppName != nil {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *Event) SetAppName(v string) {
	o.AppName = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *Event) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *Event) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *Event) SetGroupName(v string) {
	o.GroupName = &v
}

// GetActorUserName returns the ActorUserName field value if set, zero value otherwise.
func (o *Event) GetActorUserName() string {
	if o == nil || o.ActorUserName == nil {
		var ret string
		return ret
	}
	return *o.ActorUserName
}

// GetActorUserNameOk returns a tuple with the ActorUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorUserNameOk() (*string, bool) {
	if o == nil || o.ActorUserName == nil {
		return nil, false
	}
	return o.ActorUserName, true
}

// HasActorUserName returns a boolean if a field has been set.
func (o *Event) HasActorUserName() bool {
	if o != nil && o.ActorUserName != nil {
		return true
	}

	return false
}

// SetActorUserName gets a reference to the given string and assigns it to the ActorUserName field.
func (o *Event) SetActorUserName(v string) {
	o.ActorUserName = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *Event) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *Event) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *Event) SetUserName(v string) {
	o.UserName = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *Event) GetPolicyName() string {
	if o == nil || o.PolicyName == nil {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPolicyNameOk() (*string, bool) {
	if o == nil || o.PolicyName == nil {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *Event) HasPolicyName() bool {
	if o != nil && o.PolicyName != nil {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *Event) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetOtpDeviceName returns the OtpDeviceName field value if set, zero value otherwise.
func (o *Event) GetOtpDeviceName() string {
	if o == nil || o.OtpDeviceName == nil {
		var ret string
		return ret
	}
	return *o.OtpDeviceName
}

// GetOtpDeviceNameOk returns a tuple with the OtpDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetOtpDeviceNameOk() (*string, bool) {
	if o == nil || o.OtpDeviceName == nil {
		return nil, false
	}
	return o.OtpDeviceName, true
}

// HasOtpDeviceName returns a boolean if a field has been set.
func (o *Event) HasOtpDeviceName() bool {
	if o != nil && o.OtpDeviceName != nil {
		return true
	}

	return false
}

// SetOtpDeviceName gets a reference to the given string and assigns it to the OtpDeviceName field.
func (o *Event) SetOtpDeviceName(v string) {
	o.OtpDeviceName = &v
}

// GetOperationName returns the OperationName field value if set, zero value otherwise.
func (o *Event) GetOperationName() string {
	if o == nil || o.OperationName == nil {
		var ret string
		return ret
	}
	return *o.OperationName
}

// GetOperationNameOk returns a tuple with the OperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetOperationNameOk() (*string, bool) {
	if o == nil || o.OperationName == nil {
		return nil, false
	}
	return o.OperationName, true
}

// HasOperationName returns a boolean if a field has been set.
func (o *Event) HasOperationName() bool {
	if o != nil && o.OperationName != nil {
		return true
	}

	return false
}

// SetOperationName gets a reference to the given string and assigns it to the OperationName field.
func (o *Event) SetOperationName(v string) {
	o.OperationName = &v
}

// GetDirectorySyncRunId returns the DirectorySyncRunId field value if set, zero value otherwise.
func (o *Event) GetDirectorySyncRunId() int32 {
	if o == nil || o.DirectorySyncRunId == nil {
		var ret int32
		return ret
	}
	return *o.DirectorySyncRunId
}

// GetDirectorySyncRunIdOk returns a tuple with the DirectorySyncRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetDirectorySyncRunIdOk() (*int32, bool) {
	if o == nil || o.DirectorySyncRunId == nil {
		return nil, false
	}
	return o.DirectorySyncRunId, true
}

// HasDirectorySyncRunId returns a boolean if a field has been set.
func (o *Event) HasDirectorySyncRunId() bool {
	if o != nil && o.DirectorySyncRunId != nil {
		return true
	}

	return false
}

// SetDirectorySyncRunId gets a reference to the given int32 and assigns it to the DirectorySyncRunId field.
func (o *Event) SetDirectorySyncRunId(v int32) {
	o.DirectorySyncRunId = &v
}

// GetDirectoryId returns the DirectoryId field value if set, zero value otherwise.
func (o *Event) GetDirectoryId() int32 {
	if o == nil || o.DirectoryId == nil {
		var ret int32
		return ret
	}
	return *o.DirectoryId
}

// GetDirectoryIdOk returns a tuple with the DirectoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetDirectoryIdOk() (*int32, bool) {
	if o == nil || o.DirectoryId == nil {
		return nil, false
	}
	return o.DirectoryId, true
}

// HasDirectoryId returns a boolean if a field has been set.
func (o *Event) HasDirectoryId() bool {
	if o != nil && o.DirectoryId != nil {
		return true
	}

	return false
}

// SetDirectoryId gets a reference to the given int32 and assigns it to the DirectoryId field.
func (o *Event) SetDirectoryId(v int32) {
	o.DirectoryId = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *Event) GetResolution() string {
	if o == nil || o.Resolution == nil {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetResolutionOk() (*string, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *Event) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *Event) SetResolution(v string) {
	o.Resolution = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Event) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Event) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Event) SetClientId(v string) {
	o.ClientId = &v
}

// GetResourcseTypeId returns the ResourcseTypeId field value if set, zero value otherwise.
func (o *Event) GetResourcseTypeId() int32 {
	if o == nil || o.ResourcseTypeId == nil {
		var ret int32
		return ret
	}
	return *o.ResourcseTypeId
}

// GetResourcseTypeIdOk returns a tuple with the ResourcseTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetResourcseTypeIdOk() (*int32, bool) {
	if o == nil || o.ResourcseTypeId == nil {
		return nil, false
	}
	return o.ResourcseTypeId, true
}

// HasResourcseTypeId returns a boolean if a field has been set.
func (o *Event) HasResourcseTypeId() bool {
	if o != nil && o.ResourcseTypeId != nil {
		return true
	}

	return false
}

// SetResourcseTypeId gets a reference to the given int32 and assigns it to the ResourcseTypeId field.
func (o *Event) SetResourcseTypeId(v int32) {
	o.ResourcseTypeId = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *Event) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *Event) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *Event) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

func (o Event) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["event_type_id"] = o.EventTypeId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UserId != nil {
		toSerialize["user_id"] = o.UserId
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.Ipaddr != nil {
		toSerialize["ipaddr"] = o.Ipaddr
	}
	if o.ActorUserId != nil {
		toSerialize["actor_user_id"] = o.ActorUserId
	}
	if o.AssumingActingUserId != nil {
		toSerialize["assuming_acting_user_id"] = o.AssumingActingUserId
	}
	if o.RoleId != nil {
		toSerialize["role_id"] = o.RoleId
	}
	if o.AppId != nil {
		toSerialize["app_id"] = o.AppId
	}
	if o.GroupId != nil {
		toSerialize["group_id"] = o.GroupId
	}
	if o.OtpDeviceId != nil {
		toSerialize["otp_device_id"] = o.OtpDeviceId
	}
	if o.PolicyId != nil {
		toSerialize["policy_id"] = o.PolicyId
	}
	if o.ActorSystem != nil {
		toSerialize["actor_system"] = o.ActorSystem
	}
	if o.CustomMessage != nil {
		toSerialize["custom_message"] = o.CustomMessage
	}
	if o.RoleName != nil {
		toSerialize["role_name"] = o.RoleName
	}
	if o.AppName != nil {
		toSerialize["app_name"] = o.AppName
	}
	if o.GroupName != nil {
		toSerialize["group_name"] = o.GroupName
	}
	if o.ActorUserName != nil {
		toSerialize["actor_user_name"] = o.ActorUserName
	}
	if o.UserName != nil {
		toSerialize["user_name"] = o.UserName
	}
	if o.PolicyName != nil {
		toSerialize["policy_name"] = o.PolicyName
	}
	if o.OtpDeviceName != nil {
		toSerialize["otp_device_name"] = o.OtpDeviceName
	}
	if o.OperationName != nil {
		toSerialize["operation_name"] = o.OperationName
	}
	if o.DirectorySyncRunId != nil {
		toSerialize["directory_sync_run_id"] = o.DirectorySyncRunId
	}
	if o.DirectoryId != nil {
		toSerialize["directory_id"] = o.DirectoryId
	}
	if o.Resolution != nil {
		toSerialize["resolution"] = o.Resolution
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ResourcseTypeId != nil {
		toSerialize["resourcse_type_id"] = o.ResourcseTypeId
	}
	if o.ErrorDescription != nil {
		toSerialize["error_description"] = o.ErrorDescription
	}
	return json.Marshal(toSerialize)
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
