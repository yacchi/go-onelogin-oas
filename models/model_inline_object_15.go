// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
)

// InlineObject15 struct for InlineObject15
type InlineObject15 struct {
	// Set to the user email address to generate an invite link.
	Email string `json:"email"`
	// To send an invite email to a different address than the one provided in email, provide it here. The invite link is sent to this address instead.
	PersonalEmail *string `json:"personal_email,omitempty"`
}

// NewInlineObject15 instantiates a new InlineObject15 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject15(email string) *InlineObject15 {
	this := InlineObject15{}
	this.Email = email
	return &this
}

// NewInlineObject15WithDefaults instantiates a new InlineObject15 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject15WithDefaults() *InlineObject15 {
	this := InlineObject15{}
	return &this
}

// GetEmail returns the Email field value
func (o *InlineObject15) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *InlineObject15) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *InlineObject15) SetEmail(v string) {
	o.Email = v
}

// GetPersonalEmail returns the PersonalEmail field value if set, zero value otherwise.
func (o *InlineObject15) GetPersonalEmail() string {
	if o == nil || o.PersonalEmail == nil {
		var ret string
		return ret
	}
	return *o.PersonalEmail
}

// GetPersonalEmailOk returns a tuple with the PersonalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject15) GetPersonalEmailOk() (*string, bool) {
	if o == nil || o.PersonalEmail == nil {
		return nil, false
	}
	return o.PersonalEmail, true
}

// HasPersonalEmail returns a boolean if a field has been set.
func (o *InlineObject15) HasPersonalEmail() bool {
	if o != nil && o.PersonalEmail != nil {
		return true
	}

	return false
}

// SetPersonalEmail gets a reference to the given string and assigns it to the PersonalEmail field.
func (o *InlineObject15) SetPersonalEmail(v string) {
	o.PersonalEmail = &v
}

func (o InlineObject15) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.PersonalEmail != nil {
		toSerialize["personal_email"] = o.PersonalEmail
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject15 struct {
	value *InlineObject15
	isSet bool
}

func (v NullableInlineObject15) Get() *InlineObject15 {
	return v.value
}

func (v *NullableInlineObject15) Set(val *InlineObject15) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject15) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject15) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject15(val *InlineObject15) *NullableInlineObject15 {
	return &NullableInlineObject15{value: val, isSet: true}
}

func (v NullableInlineObject15) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject15) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
