// Code generated by "openapi-codegen"; DO NOT EDIT.
/*
 * OneLogin API
 *
 * This is an administrative API for OneLogin customers
 *
 * API version: 1.1.0-oas3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"encoding/json"
	"github.com/yacchi/go-onelogin-oas/models"
)

// UserRolesResponse struct for UserRolesResponse
type UserRolesResponse struct {
	Status *Status `json:"status,omitempty"`
	Data *[]int32 `json:"data,omitempty"`
}

// NewUserRolesResponse instantiates a new UserRolesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRolesResponse() *UserRolesResponse {
	this := UserRolesResponse{}
	return &this
}

// NewUserRolesResponseWithDefaults instantiates a new UserRolesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRolesResponseWithDefaults() *UserRolesResponse {
	this := UserRolesResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserRolesResponse) GetStatus() Status {
	if o == nil || o.Status == nil {
		var ret Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRolesResponse) GetStatusOk() (*Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserRolesResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Status and assigns it to the Status field.
func (o *UserRolesResponse) SetStatus(v Status) {
	o.Status = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *UserRolesResponse) GetData() []int32 {
	if o == nil || o.Data == nil {
		var ret []int32
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserRolesResponse) GetDataOk() (*[]int32, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *UserRolesResponse) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []int32 and assigns it to the Data field.
func (o *UserRolesResponse) SetData(v []int32) {
	o.Data = &v
}

func (o UserRolesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableUserRolesResponse struct {
	value *UserRolesResponse
	isSet bool
}

func (v NullableUserRolesResponse) Get() *UserRolesResponse {
	return v.value
}

func (v *NullableUserRolesResponse) Set(val *UserRolesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRolesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRolesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRolesResponse(val *UserRolesResponse) *NullableUserRolesResponse {
	return &NullableUserRolesResponse{value: val, isSet: true}
}

func (v NullableUserRolesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRolesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
